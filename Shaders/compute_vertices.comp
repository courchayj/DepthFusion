#version 430 compatibility
const float OFFSET = 0.5;

layout (local_size_x = 16, local_size_y = 16, local_size_z=1) in;

layout(location = 2) uniform mat3 intrinsics_inv;
layout(location = 1) uniform mat3 intrinsics_full;

layout (r16, binding = 0) uniform image2D img_depthTimetp1;//input


layout (std430, binding=3) buffer Vec
{
    vec4 positions[];
};


void main() {
  ivec2 coords = ivec2(gl_GlobalInvocationID);
  float data = imageLoad(img_depthTimetp1, coords).r;
  //t+1
  const uint id = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x;
  vec4 pos = vec4(intrinsics_inv * vec3((coords.x+OFFSET)*data,(coords.y+OFFSET)*data,data ),1);//put depth inside positions *data;

  positions[id] =  pos;//DONE ONCE FOR ALL ALMOST WITH ONLY DEPTH VARYING * Delta depth
  //positions[id].w=1;
}
